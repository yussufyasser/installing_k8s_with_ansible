---
# tasks file for common_config_for_all_nodes

- name: Set hostname using inventory name
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Set hosts block
  set_fact:
    custom_hosts: |
      {% for host in groups['all'] %}
      {{ hostvars[host].ansible_host }} {{ host }}
      {% endfor %}

- name: Update /etc/hosts with inventory data
  blockinfile:
    path: /etc/hosts
    block: "{{ custom_hosts }}"


- name: Disable SELinux temporarily
  command: setenforce 0
  when: ansible_selinux.status == "enabled"

- name: Disable SELinux permanently
  replace:
    path: /etc/selinux/config
    regexp: '^SELINUX=.*'
    replace: 'SELINUX=permissive'


- name: Disable swap immediately
  command: swapoff -a

- name: Remove swap entry from /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^.*swap.*$'
    replace: '# Disabled swap for Kubernetes'

- name: Enable br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Ensure overlay module is loaded
  modprobe:
    name: overlay
    state: present

- name: Ensure required kernel modules are loaded on boot
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Set sysctl params for Kubernetes networking
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Apply sysctl settings
  command: sysctl --system


- name: install prerequisites for install_containerd
  ansible.builtin.yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: present

- name: add docker repo
  ansible.builtin.yum_repository:
    name: docker-ce-stable
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg


- name: install containerd
  ansible.builtin.yum:
   name:
    - containerd
   state: present


- name: generate containerd default configurations
  command: containerd config default
  register: containerd_config_default

- name: copy containerd configurations in /etc/containerd/config.toml
  ansible.builtin.copy:
   dest: /etc/containerd/config.toml
   content: "{{ containerd_config_default.stdout }}"

- name: Set SystemdCgroup = true in containerd config
  replace:
    path: /etc/containerd/config.toml
    regexp: '^(\s*)SystemdCgroup = false'
    replace: '\1SystemdCgroup = true'


- name: enable and start containerd
  ansible.builtin.service:
   name: containerd
   enabled: yes
   state: started

- name: add kubernetes repo
  ansible.builtin.yum_repository:
    name: kubernetes
    description: Kubernetes YUM repo
    baseurl: https://pkgs.k8s.io/core:/stable:/v1.33/rpm/
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey:
      - https://pkgs.k8s.io/core:/stable:/v1.33/rpm/repodata/repomd.xml.key
      

- name: install kubelet, kubectl and kubeadm 
  ansible.builtin.yum:
   name:
    - kubectl
    - kubeadm
    - kubelet
   state: present

- name: enable and start kubelet
  ansible.builtin.service:
   name: kubelet
   state: started
   enabled: yes
  

- name: Stop and disable firewalld
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: no


